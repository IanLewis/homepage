user root; # meh.
worker_processes  1;

error_log stderr;

events {
  worker_connections  1024;
}

http {
    # map $http_user_agent $loggable {
    #     ~GoogleStackdriverMonitoring    0;
    #     ~GoogleHC                       0;
    #     default                         1;
    # }
    # access_log /dev/stdout combined if=$loggable;
    access_log off;

    gzip on;
    gzip_disable "msie6";

    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript;

    server {
        # Redirect naked domain accesses to www
        listen 8000;
        server_name     ianlewis.org    staging.ianlewis.org;

        # It doesn't matter what protocol (http, https) was used
        # we still redirect here.
        return          301 https://www.$host$request_uri;
    }

    server {
        listen 8000;
        server_name     www.ianlewis.org    www.staging.ianlewis.org;

        # Redirect to HTTPS if the protocol is http
        if ($http_x_forwarded_proto = "http") {
            return 301 https://$host$request_uri;
        }

        # Forward to app server.
        location / {
            proxy_pass http://127.0.0.1:8080;
            proxy_set_header X-Forwarded-Host   $host;
            proxy_set_header X-Real-IP          $remote_addr;
            proxy_set_header X-Forwarded-For    $proxy_add_x_forwarded_for;

            proxy_buffers   8 16k;
            proxy_buffer_size   16k;
        }
    }

    server {
        # The default server returns 403 when the host is incorrect.

        # When HTTPS the default server returns 403 when the host is incorrect.
        # If the host is wrong then the browser will show a warning message
        # but this should show a 403 if they click through.
        listen 8000 default_server;

        return 200 '';
    }
}
